<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.8.xsd
		http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.8.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd">

	<!-- add jvm arguments -Dspring.profiles.active="dev | prod" -->
	<beans profile="dev">
		<util:properties id="config" location="classpath:config/dev-config.xml" />
	</beans>
	<beans profile="prod">
		<util:properties id="config" location="classpath:config/prod-config.xml" />
	</beans>

	<beans>

		<!-- 직접적인 사용은 하지 않지만 interceptor 사용을 위해서 추가해야함 -->
		<bean id="multipartResolver" class="com.aon.lib.http.MultipartResolver" >
		<property name="maxUploadSize">
      		<value>50000000</value>
    	</property>
		</bean>

		<!-- JDBC셋팅 -->
		<!-- 
		<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
			<property name="driverClassName" value="#{config['jdbc.driver']}" />
			<property name="url" value="#{config['jdbc.url']}" />
			<property name="username" value="#{config['jdbc.username']}" />
			<property name="password" value="#{config['jdbc.password']}" />
		</bean>-->
		<jee:jndi-lookup id="dataSource"
  		 jndi-name="jdbc/aon"
  		 expected-type="javax.sql.DataSource" />
		
		<!-- jpa entity manager -->
		<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
			<!-- <property name="packagesToScan" value="false" /> -->
			<property name="dataSource" ref="dataSource" />
			<property name="persistenceXmlLocation" value="classpath:META-INF/persistence.xml" />
			<property name="jpaVendorAdapter">
				<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
			</property>
			<property name="jpaProperties">
				<props>
					<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect
					</prop>
					<prop key="hibernate.connection.autocommit">false</prop>
					<prop key="hibernate.show_sql">true</prop>
					<prop key="hibernate.format_sql">true</prop>
					<prop key="hibernate.archive.autodetection">class</prop>
					<prop key="hibernate.hbm2ddl.auto">validate</prop>
				</props>
			</property>
			<property name="persistenceUnitPostProcessors">
				<list>
					<bean class="org.springframework.data.jpa.support.ClasspathScanningPersistenceUnitPostProcessor">
						<constructor-arg name="basePackage" value="com.aon" />
						<property name="mappingFileNamePattern" value="**/*.hbm.xml" />
					</bean>
				</list>
			</property>
		</bean>
		
		<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
			<property name="entityManagerFactory" ref="entityManagerFactory" />
			<property name="dataSource" ref="dataSource"></property>
		</bean>

		<!-- rollback for all exception annotation -->
		<bean id="txAttributeSource" class="com.aon.lib.jpa.RollbackForAllAnnotationTAS" />

		<bean id="txInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
			<property name="transactionManagerBeanName" value="transactionManager" />
			<property name="transactionAttributeSource" ref="txAttributeSource" />
		</bean>

		<bean class="org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor">
			<property name="transactionAttributeSource" ref="txAttributeSource" />
			<property name="adviceBeanName" value="txInterceptor" />
		</bean>
		
		<aop:config />

		<!-- jpa repository -->
		<jpa:repositories base-package="com.aon" transaction-manager-ref="transactionManager" />

		<bean id="TransactionFilter" class="com.aon.lib.jpa.TransactionFilter" />

		<bean id="velocityConfig" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
			<property name="resourceLoaderPath" value="WEB-INF/views/velocity/" />
		</bean>
   <!-- 
		<mongo:mongo-client host="#{config['mongo.host']}" port="#{config['mongo.port']}" credentials="#{config['mongo.credentials']}">
			<mongo:client-options connections-per-host="8"
				threads-allowed-to-block-for-connection-multiplier="4" connect-timeout="1000" max-wait-time="1500"
				socket-keep-alive="true" socket-timeout="1500" />
		</mongo:mongo-client>
 
		<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
			<constructor-arg ref="mongo" />
			<constructor-arg name="databaseName" value="#{config['mongo.databaseName']}" />
		</bean>
-->
	</beans>
	
</beans>
